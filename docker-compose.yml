version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/fstore
      - REDIS_URI=redis://redis:6379/0
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/fstore
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb
      - redis
      - postgres
      - feature-processor
      - kafka

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    depends_on:
      - mongodb
      - redis
      - kafka
      - postgres
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - POSTGRES_URL=postgresql://fstore:fstore@postgres:5432/fstore
      - TESTING=true

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=fstore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  feature-processor:
    build: ./spark
    ports:
      - "4040:4040"
    environment:
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/fstore
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  demo-data:
    build:
      context: .
      dockerfile: demo/Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/fstore
      - REDIS_URI=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis

volumes:
  mongodb_data:
  redis_data:
  postgres_data:
