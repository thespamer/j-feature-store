version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/fstore
      - REDIS_URI=redis://redis:6379/0
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/fstore
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb
      - redis
      - postgres
      - feature-processor
      - kafka

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fstore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  feature-processor:
    build: ./spark
    ports:
      - "4040:4040"
    environment:
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/fstore
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "feature_events:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  e2e-test:
    build: ./tests
    environment:
      - API_URL=http://backend:8000
      - KAFKA_BROKER=kafka:9092
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/fstore
    depends_on:
      - backend
      - kafka
      - postgres
      - feature-processor

volumes:
  mongodb_data:
  redis_data:
  postgres_data:
